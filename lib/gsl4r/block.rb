# This file is generated by rake. Do not edit.


#
# == Other Info
#
# Author::	Colby Gutierrez-Kraybill
# Version::	$Id$
#

require 'rubygems'
require 'ffi'

require 'gsl4r/util'
require 'gsl4r/harness'

module GSL4r
  module Block

    extend ::FFI::Library

    # lifted from
    # http://wiki.github.com/ffi/ffi/examples
    module BlockLayout
      def self.included(base)
	base.class_eval do
	  layout :size, :size_t,
	    :data, :pointer
	end
      end
    end

    def get_block_size( a_block )
      return a_block.get_ulong(0)
    end
    module_function :get_block_size

    def get_block_data( a_block )
      return a_block.get_array_of_double(0,get_block_size(a_block))
    end
    module_function :get_block_data

    def set_block_data( a_block, some_data )
      if ( some_data.length > get_block_size(a_block) )
	raise "data exceeds size of block"
      end
      a_block.put_array_of_double(1,some_data)
      return some_data
    end
    module_function :set_block_data

    class GSL_Block < FFI::ManagedStruct
      include ::GSL4r::Block::BlockLayout

      def self.release(ptr)
	puts "release"
	::GSL4r::Block::Methods::gsl_block_free(ptr)
      end

    end

    class GSL_Block_Cast < FFI::Struct
      include ::GSL4r::Block::BlockLayout

	def length
	  return self[:size]
	end

	def values
	  return self[:data].get_array_of_double(0,length)
	end

	def set( a )
	  self[:data].put_array_of_double(0,a)
	end

    end # class GSL_Block

    module Methods
      extend ::GSL4r::Util
      extend ::FFI::Library

      ffi_lib ::GSL4r::GSL_LIB_PATH

      attach_function :gsl_block_alloc, [:size_t], :pointer
      attach_function :gsl_block_calloc, [:size_t], :pointer
      attach_function :gsl_block_free, [:pointer], :void

    end
  end # module Block
end # module GSL4r
